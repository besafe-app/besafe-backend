{"swagger":"2.0","info":{"title":"Disease backend application","description":"This is a generated swagger json for your sails project","termsOfService":"","contact":{"name":"Tiago Drumond","url":"https://github.com/tiagodexter","email":"tiagodexter@gmail.com"},"license":{"name":"MIT","url":"https://opensource.org/licenses/MIT"},"version":"1.0.0"},"host":"localhost:1337","basePath":"/","schemes":["http","https"],"externalDocs":{"url":"https://github.com/coronaioasys/disease-backend"},"parameters":{"WhereQueryParam":{"in":"query","name":"where","required":false,"type":"string","description":"This follows the standard from http://sailsjs.com/documentation/reference/blueprint-api/find-where"},"LimitQueryParam":{"in":"query","name":"limit","required":false,"type":"integer","description":"The maximum number of records to send back (useful for pagination). Defaults to undefined"},"SkipQueryParam":{"in":"query","name":"skip","required":false,"type":"integer","description":"The number of records to skip (useful for pagination)."},"SortQueryParam":{"in":"query","name":"sort","required":false,"type":"string","description":"The sort order. By default, returned records are sorted by primary key value in ascending order. e.g. ?sort=lastName%20ASC"},"PopulateQueryParam":{"in":"query","name":"populate","required":false,"type":"string","description":"check for better understanding -> http://sailsjs.com/documentation/reference/blueprint-api/find-where"},"PageQueryParam":{"in":"query","name":"page","required":false,"type":"integer","description":"This helps with pagination and when the limit is known"},"SelectQueryParam":{"in":"query","name":"select","required":false,"type":"string","description":"This helps with what to return for the user and its \",\" delimited"},"TokenHeaderParam":{"in":"header","name":"token","required":false,"type":"string","description":"Incase we want to send header information along our request"},"IDPathParam":{"in":"path","name":"id","required":true,"type":"string","description":"This is to identify a particular object out"},"PerPageQueryParam":{"in":"query","name":"perPage","required":false,"type":"integer","description":"This helps with pagination and when the limit is known for pagify"}},"paths":{"/api/v1/users/check/{name}/{phone}":{"get":{"tag":["check-user"],"summary":"Check if user exists","consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"User and phone found"},"400":{"description":"Missing parameters"},"404":{"description":"User and phone not found"},"500":{"description":"Internal server error"}},"parameters":[{"in":"path","name":"name","required":true,"type":"string","description":"User nickname"},{"in":"path","name":"phone","required":true,"type":"string","description":"User phone (Ex: 17782222222 | 5531999999999)"}],"security":[{"Authorization":[]}]}},"/api/v1/users/create":{"post":{"tag":["first-step"],"summary":"Create first step for the user","consumes":["application/json"],"produces":["application/json"],"responses":{"201":{"description":"User created successfully"},"400":{"description":"Missing parameters"},"404":{"description":"User and phone not found"},"500":{"description":"Internal server error"}},"parameters":[{"in":"body","name":"data","required":true,"type":"object","description":"Body content","properties":{"name":{"type":"string"},"phone":{"type":"string"}}}],"security":[{"Authorization":[]}]}},"/api/v1/users/sms/{id}":{"get":{"tag":["send-sms"],"summary":"Send SMS for user by id","consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"SMS sent successfully"},"400":{"description":"Missing parameters"},"404":{"description":"User and phone not found"},"500":{"description":"Internal server error"}},"parameters":[{"in":"path","name":"id","required":true,"type":"string","description":"User id"}],"security":[{"Authorization":[]}]}},"/api/v1/users/validateCode":{"post":{"tag":["validate-sms"],"summary":"Validate Code for user","consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"SMS validate successfully"},"400":{"description":"Missing parameters"},"404":{"description":"User and phone not found"},"500":{"description":"Internal server error"}},"parameters":[{"in":"body","name":"data","required":true,"type":"object","description":"Body content","properties":{"id":{"type":"integer"},"code":{"type":"integer"}}}],"security":[{"Authorization":[]}]}}},"definitions":{"users":{"properties":{"createdAt":{"type":"number"},"updatedAt":{"type":"number"},"id":{"type":"number","uniqueItems":true},"name":{"type":"string"},"phone":{"type":"string"},"nickname":{"type":"string"},"code":{"type":"number"},"gender":{"type":"string","enum":["male","female","other"]},"birthdate":{"type":"string"},"conditions":{"type":"json","enum":["chronic_respiratory_disease","cardiovascular_disease","diabetes","hypertension","chronic_renal_failure"]},"token":{"type":"string"}},"required":["phone","nickname"]},"archive":{"properties":{"id":{"type":"number","uniqueItems":true},"createdAt":{"type":"number"},"fromModel":{"type":"string"},"originalRecord":{"type":"json"},"originalRecordId":{"type":"json"}},"required":["fromModel","originalRecord"]}},"securityDefinitions":{"Authorization":{"type":"apiKey","description":"user JWT Auth Token","name":"token","in":"header","flow":"password"}}}